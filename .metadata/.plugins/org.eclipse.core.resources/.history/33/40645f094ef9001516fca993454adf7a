package com.tinkeracademy.projects;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;

public class ChatService implements Runnable {

	private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
	
	private ScheduledFuture<?> futureTask;
	
	private File chatFile;
	
	public enum ChatStatus {
		YES,
		NO,
		ERROR
	}
	
	public void startService() {
		futureTask = scheduler.scheduleAtFixedRate(this, 5, 5, TimeUnit.SECONDS);
	}
	
	public void stopService() {
		futureTask.cancel(false);
	}
	
	public void run() {
		// https://hc.apache.org/downloads.cgi
		
	}
	
	public ChatStatus initializeChatFile() {
		String userHomeDirectory = System.getProperty("user.home");
		try {		
			chatFile = new File(userHomeDirectory, "TinkerAcademyChat.tff");
			if (!chatFile.exists()) {
				chatFile.createNewFile();
				return ChatStatus.NO;
			} else if (chatFile.length() == 0) {
				return ChatStatus.NO;
			}
			return ChatStatus.YES;
		} catch(IOException e) {
			System.out.println("Oops:"+e);
		}
		return ChatStatus.ERROR;
	}
	
	public ChatStatus initializeChatUser(String userName) {
		String userHomeDirectory = System.getProperty("user.home");
		try {		
			chatFile = new File(userHomeDirectory, "TinkerAcademyChat.tff");
			if (!chatFile.exists()) {
				chatFile.createNewFile();
			}
			BufferedWriter writer = new BufferedWriter(new FileWriter(chatFile));
			writer.write(userName);
		} catch(IOException e) {
			System.out.println("Oops:"+e);
		}
		return ChatStatus.ERROR;
	}
}
